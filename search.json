[
  {
    "objectID": "examples/CmdStanR.html",
    "href": "examples/CmdStanR.html",
    "title": "Scale hierarchy reparametrization using CmdStanR and JuliaCall",
    "section": "",
    "text": "Using ReparametrizableDistributions.jl from R to reparametrize a Stan model using CmdStanR and JuliaCall."
  },
  {
    "objectID": "examples/CmdStanR.html#initializing-fitting-reparametrizing-and-refitting",
    "href": "examples/CmdStanR.html#initializing-fitting-reparametrizing-and-refitting",
    "title": "Scale hierarchy reparametrization using CmdStanR and JuliaCall",
    "section": "0.1 Initializing, fitting, reparametrizing and refitting",
    "text": "0.1 Initializing, fitting, reparametrizing and refitting\n\nlibrary(pacman)\np_load(cmdstanr, posterior, JuliaCall)\n\njulia_library(\"Pkg\")\njulia_command(\"Pkg.activate(\\\"..\\\")\")\njulia_library(\"ReparametrizableDistributions\")\njulia_library(\"Optim\")\njulia_library(\"ReverseDiff\")\n\nmod_grp &lt;- cmdstan_model(\"stan/dynamic.stan\")\n\nng &lt;- 10\nn_obs = 100\n\ndata_grp &lt;- list(\n  N = n_obs * ng,\n  K = ng,\n  x = rep(1:ng, n_obs)\n)\n\ndata_grp$y &lt;- rnorm(ng*n_obs,mean=data_grp$x)\n\n\ndata_grp$centeredness &lt;- rep(0, ng)\nfit &lt;- mod_grp$sample(data = data_grp)\n\n\nd &lt;- fit$draws(c(\"mu\", \"log_sigma0\"))\n\nlog_sigma0 &lt;- t(matrix(extract_variable(d, \"log_sigma0\")))\n\nmu &lt;- t(matrix(subset_draws(d, \"mu\"), ncol = ng))\n\ndata_grp$centeredness &lt;- julia_call(\"ReparametrizableDistributions.find_centeredness\", log_sigma0, mu, rep(0, ng))\n\nafit &lt;- mod_grp$sample(data = data_grp, chains = 4)"
  },
  {
    "objectID": "examples/CmdStanR.html#initial-fit-diagnostics-and-summary",
    "href": "examples/CmdStanR.html#initial-fit-diagnostics-and-summary",
    "title": "Scale hierarchy reparametrization using CmdStanR and JuliaCall",
    "section": "0.2 Initial fit diagnostics and summary",
    "text": "0.2 Initial fit diagnostics and summary\n\nfit$diagnostic_summary()\n\n$num_divergent\n[1] 0 0 0 0\n\n$num_max_treedepth\n[1] 0 0 0 0\n\n$ebfmi\n[1] 0.7694405 0.7478047 0.7671194 0.7361053\n\nfit$summary(c(\"sigma0\", \"sigma\", \"mu\"))\n\n# A tibble: 12 × 10\n   variable  mean median     sd    mad    q5    q95  rhat ess_bulk ess_tail\n   &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 sigma0   7.33   6.95  2.01   1.72   4.85  10.9    1.01     274.     473.\n 2 sigma    0.951  0.950 0.0209 0.0203 0.918  0.986  1.01    1216.    1123.\n 3 mu[1]    0.857  0.856 0.0961 0.0944 0.700  1.02   1.00    1915.    1744.\n 4 mu[2]    2.19   2.19  0.0934 0.0920 2.03   2.34   1.00    3607.    2299.\n 5 mu[3]    2.93   2.92  0.0934 0.0960 2.77   3.08   1.00    4160.    2923.\n 6 mu[4]    4.19   4.19  0.0928 0.0937 4.04   4.35   1.00    4408.    3125.\n 7 mu[5]    4.79   4.79  0.0946 0.0971 4.63   4.94   1.00    4550.    2945.\n 8 mu[6]    6.03   6.03  0.0932 0.0957 5.88   6.18   1.00    4921.    3508.\n 9 mu[7]    7.05   7.05  0.0917 0.0914 6.90   7.20   1.00    4791.    3513.\n10 mu[8]    8.06   8.06  0.0947 0.0923 7.90   8.21   1.00    4596.    3451.\n11 mu[9]    9.06   9.06  0.0957 0.0975 8.90   9.22   1.00    4369.    3450.\n12 mu[10]   9.99   9.99  0.0949 0.0939 9.83  10.1    1.00    4445.    3378."
  },
  {
    "objectID": "examples/CmdStanR.html#refit-diagnostics-and-summary",
    "href": "examples/CmdStanR.html#refit-diagnostics-and-summary",
    "title": "Scale hierarchy reparametrization using CmdStanR and JuliaCall",
    "section": "0.3 Refit diagnostics and summary",
    "text": "0.3 Refit diagnostics and summary\n\ndata_grp$centeredness\n\n [1] 1 1 1 1 1 1 1 1 1 1\n\nafit$diagnostic_summary()\n\n$num_divergent\n[1] 0 0 0 0\n\n$num_max_treedepth\n[1] 0 0 0 0\n\n$ebfmi\n[1] 0.9969765 1.0565596 1.0701375 0.9376031\n\nafit$summary(c(\"sigma0\", \"sigma\", \"mu\"))\n\n# A tibble: 12 × 10\n   variable  mean median     sd    mad    q5    q95  rhat ess_bulk ess_tail\n   &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 sigma0   7.18   6.81  1.99   1.65   4.75  10.8    1.00    8510.    2536.\n 2 sigma    0.951  0.951 0.0207 0.0208 0.918  0.986  1.00    8541.    2453.\n 3 mu[1]    0.855  0.854 0.0953 0.0930 0.698  1.01   1.00    9568.    2370.\n 4 mu[2]    2.19   2.19  0.0968 0.0986 2.03   2.35   1.00   10611.    2699.\n 5 mu[3]    2.93   2.93  0.0915 0.0923 2.78   3.08   1.00    9317.    2733.\n 6 mu[4]    4.20   4.20  0.0944 0.0933 4.04   4.35   1.00    9500.    2783.\n 7 mu[5]    4.79   4.78  0.0965 0.0997 4.63   4.94   1.00   11538.    2993.\n 8 mu[6]    6.03   6.03  0.0947 0.0933 5.87   6.18   1.00   10049.    2334.\n 9 mu[7]    7.05   7.05  0.0942 0.0969 6.90   7.21   1.00    8943.    2894.\n10 mu[8]    8.06   8.06  0.0959 0.0952 7.90   8.22   1.00    9329.    2747.\n11 mu[9]    9.06   9.06  0.0967 0.100  8.90   9.21   1.00    8524.    2707.\n12 mu[10]   9.99   9.99  0.0955 0.0930 9.83  10.1    1.00    8579.    3211."
  },
  {
    "objectID": "examples/CmdStanR.html#standynamic.stan",
    "href": "examples/CmdStanR.html#standynamic.stan",
    "title": "Scale hierarchy reparametrization using CmdStanR and JuliaCall",
    "section": "1.1 stan/dynamic.stan",
    "text": "1.1 stan/dynamic.stan\n// Comparison of k groups with common variance and\n// hierarchical prior for the mean\ndata {\n  int&lt;lower=0&gt; N; // number of observations\n  int&lt;lower=0&gt; K; // number of groups\n  array[N] int&lt;lower=1, upper=K&gt; x; // discrete group indicators\n  vector[N] y; // real valued observations\n  vector[K] centeredness;\n}\nparameters {\n  real&lt;lower=0&gt; sigma0; // prior std constrained to be positive\n  real&lt;lower=0&gt; sigma; // common std constrained to be positive\n  vector[K] mu_z;\n}\n\ntransformed parameters {\n vector[K] mu = mu_z .* sigma0 .^ (1 - centeredness);\n}\n\nmodel {\n  sigma0 ~ normal(0, 100); // weakly informative prior\n  mu_z ~ normal(0, sigma0 .^ (centeredness)); // population prior with unknown parameters\n\n  sigma ~ lognormal(0, .5); // weakly informative prior\n  y ~ normal(mu[x], sigma); // observation model / likelihood\n}\n\ngenerated quantities {\n  real log_sigma0 = log(sigma0);\n}"
  },
  {
    "objectID": "examples/ScaleHierarchy.html",
    "href": "examples/ScaleHierarchy.html",
    "title": "Scale hierarchy reparametrization",
    "section": "",
    "text": "Finding the best centeredness for a scale hierarchy using independent draws from a funnel."
  },
  {
    "objectID": "examples/ScaleHierarchy.html#independently-sampling-from-the-funnel",
    "href": "examples/ScaleHierarchy.html#independently-sampling-from-the-funnel",
    "title": "Scale hierarchy reparametrization",
    "section": "1 Independently sampling from the funnel",
    "text": "1 Independently sampling from the funnel\n\nusing Random, Distributions, DynamicPlots\n \nrng = Xoshiro(0)\n\nn_parameters = 999\nn_draws = 1000\n\nlog_scales = rand(rng, Normal(), (n_parameters, n_draws))\nxi = rand(rng, Normal(), (n_parameters, n_draws))\nx = exp.(log_scales) .* xi\n\nFigure([\n    Scatter(x[1, :], log_scales[1, :], xlabel=\"x1\", ylabel=\"log scale\", title=\"\\ncentered\"),\n    Scatter(xi[1, :], log_scales[1, :], xlabel=\"xi1\", ylabel=\"log scale\", title=\"\\nnon-centered\"),\n], plot_title=\"Centered vs non-centered parametrization\")'"
  },
  {
    "objectID": "examples/ScaleHierarchy.html#reparametrizing-the-funnel",
    "href": "examples/ScaleHierarchy.html#reparametrizing-the-funnel",
    "title": "Scale hierarchy reparametrization",
    "section": "2 Reparametrizing the funnel",
    "text": "2 Reparametrizing the funnel\n\n# Currently, the three below \"imports\" are needed \nusing Optim, ReverseDiff, ReparametrizableDistributions\n\n@time centeredness = ReparametrizableDistributions.find_centeredness(\n    log_scales, x, ones(n_parameters)\n)\n\n  9.470785 seconds (113.62 M allocations: 6.652 GiB, 7.58% gc time)\n\n\n999-element Vector{Float64}:\n 2.3156357906887656e-22\n 0.017878737637845626\n 0.03662184969475224\n 0.008456942923537944\n 0.0055571275045578575\n 0.005243951369869717\n 2.3156357906887656e-22\n 0.030383850903036903\n 0.014625922840439584\n 0.03942034885844935\n 0.012131204761371578\n 2.3156357906887656e-22\n 0.01361161095616389\n ⋮\n 0.021224630352922078\n 2.3156357906887656e-22\n 2.3156357906887656e-22\n 0.008097934782206814\n 2.3156357906887656e-22\n 0.00731797366736444\n 0.018932120075084234\n 2.3156357906887656e-22\n 2.3156357906887656e-22\n 2.3156357906887656e-22\n 2.3156357906887656e-22\n 0.03181136653127193"
  },
  {
    "objectID": "examples/ScaleHierarchy.html#visualizing-the-found-parametrization-parameters",
    "href": "examples/ScaleHierarchy.html#visualizing-the-found-parametrization-parameters",
    "title": "Scale hierarchy reparametrization",
    "section": "3 Visualizing the found parametrization parameters",
    "text": "3 Visualizing the found parametrization parameters\n\nusing DynamicPlots \nECDFPlot(centeredness, xlabel=\"centeredness\", label=\"estimated\") + Vline([0], label=\"ideal\") \n\n\n\n\n\n\n\n\n(The above visualizations uses the DynamicPlots package, but any other plotting packages works as well or better.)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "",
    "section": "1.1 Installation",
    "text": "1.1 Installation\nInitialize julia project if not done yet, see e.g. https://pkgdocs.julialang.org/v1/environments/.\nIn short, something like:\n# Start julia REPL with project defined in current directory\njulia --project=.\nFrom that REPL, run:\n # Enter julia package manager\n]\n# Add registered external packages\nadd Optim ReverseDiff Random Distributions \n# Add reparametrization package\nadd https://github.com/nsiccha/ReparametrizableDistributions.jl  \nAfter doing that, you should be able to run one of the examples at https://nsiccha.github.io/ReparametrizableDistributions.jl/."
  },
  {
    "objectID": "index.html#examples",
    "href": "index.html#examples",
    "title": "",
    "section": "1.2 Examples",
    "text": "1.2 Examples"
  }
]